// Generated by view binder compiler. Do not edit!
package com.android.assignment6.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.android.assignment6.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProgressDialogViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout cpBgView;

  @NonNull
  public final CardView cpCardview;

  @NonNull
  public final ProgressBar cpPbar;

  @NonNull
  public final TextView cpTitle;

  @NonNull
  public final ConstraintLayout cpView;

  private ProgressDialogViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout cpBgView, @NonNull CardView cpCardview, @NonNull ProgressBar cpPbar,
      @NonNull TextView cpTitle, @NonNull ConstraintLayout cpView) {
    this.rootView = rootView;
    this.cpBgView = cpBgView;
    this.cpCardview = cpCardview;
    this.cpPbar = cpPbar;
    this.cpTitle = cpTitle;
    this.cpView = cpView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProgressDialogViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProgressDialogViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.progress_dialog_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProgressDialogViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout cpBgView = (ConstraintLayout) rootView;

      id = R.id.cp_cardview;
      CardView cpCardview = rootView.findViewById(id);
      if (cpCardview == null) {
        break missingId;
      }

      id = R.id.cp_pbar;
      ProgressBar cpPbar = rootView.findViewById(id);
      if (cpPbar == null) {
        break missingId;
      }

      id = R.id.cp_title;
      TextView cpTitle = rootView.findViewById(id);
      if (cpTitle == null) {
        break missingId;
      }

      id = R.id.cp_view;
      ConstraintLayout cpView = rootView.findViewById(id);
      if (cpView == null) {
        break missingId;
      }

      return new ProgressDialogViewBinding((ConstraintLayout) rootView, cpBgView, cpCardview,
          cpPbar, cpTitle, cpView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
